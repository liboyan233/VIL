name: umi

camera_obs_latency: 0.0
robot_obs_latency: 0.0
gripper_obs_latency: 0.0
dataset_frequeny: 0 #59.94
obs_down_sample_steps: 3 # 3, 1

low_dim_obs_horizon: 1
img_obs_horizon: 1
action_horizon: 16
ignore_proprioception: False

shape_meta: &shape_meta
  # acceptable types: rgb, low_dim
  obs:
    camera0_rgb:  # wrist camera
      shape: [3, 224, 224] # 3,240,424
      horizon: ${task.img_obs_horizon} # int
      latency_steps: 0 # float
      down_sample_steps: ${task.obs_down_sample_steps} # int
      type: rgb
      ignore_by_policy: False # set to true to ignore
    camera1_rgb:  # left camera
      shape: [3, 224, 224]
      horizon: ${task.img_obs_horizon} # int
      latency_steps: 0 # float
      down_sample_steps: ${task.obs_down_sample_steps} # int
      type: rgb
      ignore_by_policy: False
    robot_qpos: # multiple robot with robot1_joint_pos, robot2_joint_pos, ...
      shape: [14]
      horizon: ${task.low_dim_obs_horizon} # int
      latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
      down_sample_steps: ${task.obs_down_sample_steps} # float
      type: low_dim
      ignore_by_policy: ${task.ignore_proprioception}
    # pose with respect to episode start
    # robot0_eef_pos_wrt_start:
    #   shape: [3]
    #   horizon: ${task.low_dim_obs_horizon} # int
    #   latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
    #   down_sample_steps: ${task.obs_down_sample_steps} # float
    #   type: low_dim
    #   ignore_by_policy: ${task.ignore_proprioception}

  action: 
    shape: [14]
    horizon: ${task.action_horizon}
    latency_steps: 0 # float
    down_sample_steps: ${task.obs_down_sample_steps} # int

task_name: &task_name transfer_cube # &<> allows to reuse the value
dataset_path: '/home/data/liboyan/dataset/act/sim_transfer_cube_wrist/sim_transfer_cube_wrist.zarr.zip'

env_runner:
  _target_: diffusion_policy.env_runner.real_pusht_image_runner.RealPushTImageRunner

dataset:
  _target_: diffusion_policy.dataset.cube_transfer_dataset.CubeTransferDataset
  shape_meta: *shape_meta
  dataset_path: ${task.dataset_path}
  cache_dir: null
  action_padding: True
  repeat_frame_prob: 0.0
  max_duration: null
  seed: 42
  val_ratio: 0.05

